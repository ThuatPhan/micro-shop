version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: default_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root" ]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-service:
    build: ./service-registry
    container_name: eureka-service
    ports:
      - "8761:8761"
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    env_file:
      - ./api-gateway/.env
    environment:
      EUREKA_URL: http://eureka-service:8761/eureka/
    depends_on:
      eureka-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
      cart-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  product-service:
    build: ./product-service
    container_name: product-service
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/product_service_db
      DB_USERNAME: root
      DB_PASSWORD: root
      EUREKA_URL: http://eureka-service:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      eureka-service:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  cart-service:
    build: ./cart-service
    container_name: cart-service
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/cart_service_db
      DB_USERNAME: root
      DB_PASSWORD: root
      EUREKA_URL: http://eureka-service:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      eureka-service:
        condition: service_healthy
    ports:
      - "8082:8082"
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  order-service:
    build: ./order-service
    container_name: order-service
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/order_service_db
      DB_USERNAME: root
      DB_PASSWORD: root
      EUREKA_URL: http://eureka-service:8761/eureka/
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      eureka-service:
        condition: service_healthy
    ports:
      - "8083:8083"
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  notification-service:
    build: ./notification-service
    container_name: notification-service
    env_file:
      - ./notification-service/.env
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/notification_service_db
      DB_USERNAME: root
      DB_PASSWORD: root
      EUREKA_URL: http://eureka-service:8761/eureka/
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8084:8084"
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  backend:

volumes:
  rabbitmq_data:
  postgres_data:
